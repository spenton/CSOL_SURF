;***** CSOL image processing calibration *****

;+
; NAME:
;  csol_hex2img
;
; PURPOSE:
;   Converts a hex file generated by CSOL detector to a long integer array of 2000x1504
;
; INPUTS:
;   File name of the the hex file
;   whichrot is the orientation of the final image, for subsequent processing use whichrot =1
;  whichrot=6 make the image match what appears in Alan Sims' MATLAB images
;
; OPTIONAL INPUTS:
; None
;
; KEYWORD PARAMETERS:
;   None
;
; OUTPUTS:
;   Image array lonarr(2000,1504)
;
; OPTIONAL OUTPUTS:
;   None
;
; PROCEDURES/FUNCTIONS CALLED:
;   None
;
; RESTRICTIONS:
;   None
;
; EXAMPLE:
; im=csol_hex2img(filenm,1)
;
; MODIFICATION HISTORY: RCS_ID="$Id: csol_hex2img.pro,v 1.3 2019/03/18 19:53:01 spenton Exp $"
;   2017-8-12: JWH
;-

function csol_hex2img,filenm,whichrot=whichrot,nrows=nrows,ncols=ncols
	if n_elements(nrows) ne 1 then nrows=1504L
	if n_elements(ncols) ne 1 then ncols=2000L
	if n_elements(whichrot) ne 1 then whichrot=1

  get_lun,lun
  OPENR, lun, filenm
  B = BYTARR(2, nrows*ncols, /NOZERO)

  READU, lun, B
  CLOSE, lun
  FREE_LUN,lun

  c=dblarr(nrows*ncols)
  c=reform(b[0,*]+256*b[1,*])

  img=lonarr(nrows,ncols)

  for j=0l,ncols-1 do begin
    img[*,j]=c[j*nrows:j*nrows+(nrows-1)]
  endfor

  satpx=where(img lt 0, cnt)
  if cnt gt 0 then img[satpx]+=65535

  if whichrot eq 1 or whichrot eq 6 then begin
    if whichrot eq 1 then begin
      img=rotate(img,1)
      ;print, 'pixel(0,0) in lower left corner (correct view for pixel identification)'
    endif
    if whichrot eq 6 then begin
      img=rotate(img,6)
      ;print, 'pixel(0,0) in upper left corner (detector orientation as viewed from grating)'
    endif
  endif else begin
    message,'ERROR: invalid rotation index! whichrot must be 1 or 6!"
  endelse

  return, img
end
